# Install OS instead of upgrade
install
# Use CDROM installation media
cdrom

# System language
lang ja_JP
# System keyboard
keyboard jp106
# System timezone
timezone  Asia/Tokyo

cmdline

# Network information
network  --bootproto=dhcp --device=eth0 --onboot=on
network  --bootproto=dhcp --device=eth1 --onboot=on
network  --bootproto=dhcp --device=eth2 --onboot=on

# Firewall configuration
firewall --disabled
# SELinux configuration
selinux --disabled
# System authorization information
authconfig --enableshadow  --passalgo=sha512

# Clear the Master Boot Record
zerombr
# System bootloader configuration
bootloader --location=mbr

# Partition clearing information
clearpart --all --initlabel
# Disk partitioning information
part /boot --fstype="ext4" --size=200
part swap --fstype="swap" --size=2048
part / --fstype="ext4" --grow --size=1

firstboot --disabled

# Root password
rootpw --plaintext vagrant

# Reboot after installation
reboot

%packages
@base
@development
git

%end

%post --log=/root/install-post.log

set -x

# Create vagrant user
groupadd vagrant
useradd vagrant -g vagrant -G wheel
echo "vagrant" | passwd --stdin vagrant

# Install vagrant keys
mkdir -p /home/vagrant/.ssh
chmod 700 /home/vagrant/.ssh
cd /home/vagrant/.ssh
(echo -n ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrt
 echo -n vp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS
 echo -n 0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPI
 echo -n TAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6ki
 echo -n vAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvx
 echo -n hMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE
 echo 98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key ) \
     >authorized_keys
chown -R vagrant:vagrant /home/vagrant/.ssh

# Import key first so that yum doesn't complain later.
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6

# bzr, mercurial : source control
# kernel-devel : VirtualBox Guest Additions.
# man : tools are never consistent across platforms.
# nfs-utils : Vagrant's shared folders.
# yum-utils : package-cleanup command.
yum shell -y <<EOM
config exclude cscope ctags doxygen intltool systemtap
update
groupinstall "Development Tools"
install http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
install bzr kernel-devel man mercurial nfs-utils yum-utils
install openssl-devel zlib-devel curl-devel ncurses-devel readline-devel
run
EOM

rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6

# sudo configure
sed -i '/.*requiretty/d' /etc/sudoers
echo '%wheel ALL=NOPASSWD: ALL' >> /etc/sudoers

# Squash the delay on boot
sed -i '/splashimage/d;s_timeout.*$_timeout=0_;s/ rhgb quiet//g' \
    /boot/grub/grub.conf

# Setup network devices.
rm /etc/udev/rules.d/70-persistent-net.rules
echo '#' >/etc/udev/rules.d/75-persistent-net-generator.rules

# SSH configure
echo 'UseDNS no' >> /etc/ssh/sshd_config

# VirtualBox Guest Additions
# The "Window System drivers" step will fail which is fine because we
# don't have Xorg
mount -o ro /dev/cdrom /mnt/
/mnt/VBoxLinuxAdditions.run
chkconfig vboxadd-x11 off
umount /mnt/

# kernel-devel : Installed for VirtualBox Guest Additions
yum shell -y <<EOF
remove kernel-devel
run
EOF

# Install Ruby + rbenv
git clone https://github.com/sstephenson/rbenv.git /usr/local/share/applications/rbenv
mkdir /usr/local/share/applications/rbenv/plugins
git clone https://github.com/sstephenson/ruby-build.git /usr/local/share/applications/rbenv/plugins/ruby-build
cat <<EOM >/etc/profile.d/language_env.sh
export RBENV_ROOT="/usr/local/share/applications/rbenv"
export PATH="$RBENV_ROOT/bin:$PATH"
eval "$(rbenv init -)"
EOM
source /etc/profile.d/language_env.sh
/usr/local/share/applications/rbenv/bin/rbenv install 2.0.0-p353
/usr/local/share/applications/rbenv/bin/rbenv global 2.0.0-p353
/usr/local/share/applications/rbenv/bin/rbenv rehash

# Delete Log
rm -f /var/log/dmesg.old /var/log/anaconda.ifcfg.log \\
      /var/log/anaconda.log /var/log/anaconda.program.log \\
      /var/log/anaconda.storage.log /var/log/anaconda.syslog \\
      /var/log/anaconda.yum.log /root/anaconda-ks.cfg \\
      /var/log/vboxadd-install.log /var/log/vbox-install-x11.log \\
      /var/log/VBoxGuestAdditions.log /var/log/vboxadd-install-x11.log
echo -n | tee /var/log/dmesg /var/log/maillog /var/log/lastlog \\
              /var/log/secure /var/log/yum.log >/var/log/cron


rm -rf /tmp/* /tmp/.[^.]+
dd if=/dev/zero of=/tmp/clean bs=1M || rm -f /tmp/clean


/sbin/shutdown -h now

%end

